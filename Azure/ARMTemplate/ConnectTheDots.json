{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "asaStartBehavior": {
      "type": "string",
      "metadata": {
        "description": "The start behavior for Stream Analytics jobs [LastStopTime | JobStartTime (default)]"
      },
      "defaultValue": "JobStartTime"
    },
    "asaStartTime": {
      "type": "string",
      "metadata": {
        "description": "The start time for Stream Analytics jobs"
      },
      "defaultValue": "Now"
    },
    "iotHubSku": {
      "type": "string",
      "allowedValues": [
        "F1",
        "S1",
        "S2"
      ],
      "metadata": {
        "description": "The Iothub Sku"
      }
    },
    "iotHubTier": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "The Iothub tier"
      }
    },
    "packageUri": {
      "type": "string",
      "defaultValue": "http://aka.ms/connectthedotswebsitepackage"
    },
    "sbSku": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The servicebus Sku"
      }
    },
    "solutionName": {
      "type": "string",
      "metadata": {
        "description": "The name of your ConnectTheDots solution (will be used to prefix the services names"
      }
    },
    "storageAccountSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The storage Sku"
      }
    },
    "webSku": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "The Sku type of the webapp"
      }
    },
    "webWorkerCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "The webapp worker count"
      }
    },
    "webWorkerSize": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The size of the webapp"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "storageVersion": "2015-05-01-preview",
    "storageName": "[concat(parameters('solutionName'), 'storage')]",
    "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
    "sbVersion": "[providers('Microsoft.Eventhub', 'namespaces').apiVersions[0]]",
    "ehOutName": "ehalerts",
    "sbKeyName": "RootManageSharedAccessKey",
    "sbName": "[concat(parameters('solutionName'),'sb')]",
    "sbResourceId": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('sbName'), variables('sbKeyName'))]",
    "saVersion": "2015-10-01",
    "webVersion": "2015-04-01",
    "webPlanName": "[concat(parameters('solutionName'), 'plan')]",
    "webSiteName": "[parameters('solutionName')]",
    "iotHubVersion": "2016-02-03",
    "iotHubName": "[concat(parameters('solutionName'), 'hub')]",
    "iotHubResourceId": "[resourceId('Microsoft.Devices/Iothubs', variables('iotHubName'))]",
    "iotHubKeyName": "iothubowner",
    "iotHubKeyResource": "[resourceId('Microsoft.Devices/Iothubs/Iothubkeys', variables('iotHubName'), variables('iotHubKeyName'))]",
    "saCGName": "streamanalyticscg",
    "websiteCGName": "websitecg"
  },
  "resources": [
    {
      "apiVersion": "[variables('storageVersion')]",
      "location": "[variables('location')]",
      "name": "[variables('storageName')]",
      "properties": {
        "accountType": "[parameters('storageAccountSku')]"
      },
      "type": "Microsoft.Storage/storageAccounts",
      "tags": {
        "displayName": "storage"
      }
    },
    {
      "apiVersion": "[variables('iotHubVersion')]",
      "type": "Microsoft.Devices/Iothubs",
      "name": "[variables('iotHubName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[parameters('iotHubSku')]",
        "tier": "[parameters('iotHubTier')]",
        "capacity": 1
      },
      "properties": {
        "location": "[variables('location')]"
      },
      "tags": {
        "displayName": "IoTHub"
      },
      "resources": [
        {
          "apiVersion": "[variables('iotHubVersion')]",
          "name": "[concat(variables('iotHubName'), '/events/', variables('websiteCGName'))]",
          "type": "Microsoft.Devices/Iothubs/eventhubEndpoints/ConsumerGroups",
          "dependsOn": [
            "[concat('Microsoft.Devices/Iothubs/', variables('iotHubName'))]"
          ],
          "tags": {
            "displayName": "Website Consumer Group"
          }
        },
        {
          "apiVersion": "[variables('iotHubVersion')]",
          "name": "[concat(variables('iotHubName'), '/events/', variables('saCGName'))]",
          "type": "Microsoft.Devices/Iothubs/eventhubEndpoints/ConsumerGroups",
          "dependsOn": [
            "[concat('Microsoft.Devices/Iothubs/', variables('iotHubName'))]"
          ],
          "tags": {
            "displayName": "Stream Analytics Consumer Group"
          }
        }
      ]
    },

    {
      "apiVersion": "[variables('sbVersion')]",
      "name": "[variables('sbName')]",
      "type": "Microsoft.Eventhub/namespaces",
      "location": "[variables('location')]",
      "properties": {
        "messagingSku": "[parameters('sbSku')]",
        "region": "[variables('location')]"
      },
      "tags": {
        "displayName": "Service Bus"
      },
      "resources": [
        {
          "apiVersion": "[variables('sbVersion')]",
          "name": "[variables('ehOutName')]",
          "type": "eventHubs",
          "location": "[variables('location')]",
          "dependsOn": [
            "[concat('Microsoft.Eventhub/namespaces/', variables('sbName'))]"
          ],
          "properties": {
            "path": "[variables('ehOutName')]",
            "MessageRetentionInDays": 1
          },
          "tags": {
            "displayName": "Alerts Event Hub"
          },
          "resources": [

          ]

        }
      ]
    },
    {
      "apiVersion": "[variables('saVersion')]",
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "name": "[concat(parameters('solutionName'), 'alerts')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Devices/Iothubs/', variables('iotHubName'))]",
        "[concat('Microsoft.Eventhub/namespaces/', variables('sbName'))]"

      ],
      "tags": {
        "displayName": "Stream Analytics Job"
      },
      "properties": {
        "sku": {
          "name": "standard"
        },
        "EventsOutOfOrderMaxDelayInSeconds": 10,
        "EventsOutOfOrderPolicy": "adjust",
        "Inputs": [
          {
            "Name": "IoTHubStream",
            "Properties": {
              "DataSource": {
                "Properties": {
                  "consumerGroupName": "[variables('saCGName')]",
                  "iotHubNamespace": "[variables('iotHubName')]",
                  "sharedAccessPolicyKey": "[listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey]",
                  "sharedAccessPolicyName": "[variables('iotHubKeyName')]"
                },
                "Type": "Microsoft.Devices/IotHubs"
              },
              "Serialization": {
                "Properties": {
                  "Encoding": "UTF8"
                },
                "Type": "Json"
              },
              "Type": "Stream"
            }
          }
        ],
        "Outputs": [
          {
            "Name": "DeviceInfoEvents",
            "Properties": {
              "DataSource": {
                "Properties": {
                  "EventHubName": "[variables('ehOutName')]",
                  "ServiceBusNamespace": "[variables('sbName')]",
                  "SharedAccessPolicyKey": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryKey]",
                  "SharedAccessPolicyName": "[variables('sbKeyName')]",
                  "PartitionKey": "PartitionId"
                },
                "Type": "Microsoft.ServiceBus/EventHub"
              },
              "Serialization": {
                "Properties": {
                  "Encoding": "UTF8",
                  "Format": "Array"
                },
                "Type": "Json"
              }
            }
          }
        ],
        "Transformation": {
          "Name": "AllToBlob",
          "Properties": {
            "Query": "SELECT \r\n    'TempSpike' AS alerttype, \r\n    'Temperature over 80F' AS message, \r\n    displayname,\r\n    guid,\r\n    measurename,\r\n    unitofmeasure,\r\n    location,\r\n    organization,\r\n    MIN(timecreated) AS timecreated,\r\n    MAX(value) AS tempMax,\r\n    MAX(value) AS value\r\nINTO\r\n    DeviceInfoEvents\r\nFROM \r\n    IoTHubStream TIMESTAMP BY timecreated\r\nWHERE\r\n    measurename = 'temperature' OR measurename = 'Temperature'\r\nGROUP BY \r\n    displayname, guid, measurename, unitofmeasure, location, organization,\r\n    TumblingWindow(Second, 5)\r\n HAVING\r\n   tempMax > 80",
            "StreamingUnits": 1
          }
        }
      }
    },
    {
      "apiVersion": "[variables('webVersion')]",
      "name": "[variables('webPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "Web Plan"
      },
      "properties": {
        "name": "[variables('webPlanName')]",
        "sku": "[parameters('webSku')]",
        "workerSize": "[parameters('webWorkerSize')]",
        "numberOfWorkers": "[parameters('webWorkerCount')]"
      }
    },
    {
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[variables('location')]",
      "apiVersion": "2015-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('webPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Devices/Iothubs', variables('iotHubName'))]",
        "[concat('Microsoft.Eventhub/namespaces/', variables('sbName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('webPlanName'))]": "Resource",
        "displayName": "WebSite"
      },
      "properties": {
        "name": "[variables('WebSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('webPlanName'))]",
        "siteConfig": {
          "AlwaysOn": true,
          "WebsocketsEnabled": true,
          "appSettings": [
            {
              "name": "Azure.IoT.IoTHub.EventHub.Name",
              "value": "[reference(variables('iotHubResourceId')).eventHubEndpoints.events.path]"
            },
            {
              "name": "Azure.IoT.IoTHub.EventHub.ConnectionString",
              "value": "[concat('Endpoint=', reference(variables('iotHubResourceId')).eventHubEndpoints.events.endpoint, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey)]"
            },
            {
              "name": "Azure.ServiceBus.EventHub.Name",
              "value": "[variables('ehOutName')]"
            },
            {
              "name": "Azure.ServiceBus.EventHub.ConnectionString",
              "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]"
            },
            {
              "name": "Azure.Storage.ConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).key1)]"
            },
            {
              "name": "ObjectTypePrefix",
              "value": ""
            },
            {
              "name": "SolutionName",
              "value": "[variables('webSiteName')]"
            }
          ]
        }
      },
      "resources": [
        
      ]
    }
  ],
  "outputs": {
    "iotHubConnectionString": {
      "type": "string",
      "value": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey)]"
    },
    "Azure.IoT.IoTHub.EventHub.Name": {
      "type": "string",
      "value": "[reference(variables('iotHubResourceId')).eventHubEndpoints.events.path]"
    },
    "Azure.IoT.IoTHub.EventHub.ConnectionString": {
      "type": "string",
      "value": "[concat('Endpoint=', reference(variables('iotHubResourceId')).eventHubEndpoints.events.endpoint, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey)]"
    },
    "Azure.IoT.IoTHub.EventHub.ConsumerGroup": {
      "type": "string",
      "value": "[variables('websiteCGName')]"
    },
    "Azure.ServiceBus.EventHub.Name": {
      "type": "string",
      "value": "[variables('ehOutName')]"
    },
    "Azure.ServiceBus.EventHub.ConnectionString": {
      "type": "string",
      "value": "[listkeys(variables('sbResourceId'), variables('sbVersion')).primaryConnectionString]"
    },
    "Azure.ServiceBus.EventHub.ConsumerGroup": {
      "type": "string",
      "value": "[variables('websiteCGName')]"
    },
    "Azure.Storage.ConnectionString": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).key1)]"
    }
  }
}
